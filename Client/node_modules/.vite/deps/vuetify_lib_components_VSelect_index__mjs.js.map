{
  "version": 3,
  "sources": ["../../vuetify/src/components/VSelect/VSelect.tsx", "../../vuetify/src/components/VCheckbox/VCheckbox.tsx", "../../vuetify/src/components/VSelectionControl/VSelectionControl.tsx", "../../vuetify/src/components/VSelectionControlGroup/VSelectionControlGroup.tsx", "../../vuetify/src/components/VCheckbox/VCheckboxBtn.tsx", "../../vuetify/src/components/VChip/VChip.tsx", "../../vuetify/src/components/VChipGroup/VChipGroup.tsx", "../../vuetify/src/components/VMenu/VMenu.tsx", "../../vuetify/src/components/VOverlay/VOverlay.tsx", "../../vuetify/src/composables/delay.ts", "../../vuetify/src/components/VMenu/shared.ts", "../../vuetify/src/components/VOverlay/useActivator.tsx", "../../vuetify/src/composables/lazy.ts", "../../vuetify/src/components/VOverlay/util/point.ts", "../../vuetify/src/components/VOverlay/locationStrategies.ts", "../../vuetify/src/components/VOverlay/requestNewFrame.ts", "../../vuetify/src/components/VOverlay/scrollStrategies.ts", "../../vuetify/src/composables/stack.ts", "../../vuetify/src/composables/teleport.ts", "../../vuetify/src/directives/click-outside/index.ts", "../../vuetify/src/composables/scopeId.ts"],
  "sourcesContent": ["// Styles\nimport './VSelect.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { VTextField } from '@/components/VTextField'\n\n// Composables\nimport { makeItemsProps, useItems } from '@/composables/items'\nimport { makeTransitionProps } from '@/composables/transition'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { IconValue } from '@/composables/icons'\n\n// Utility\nimport { computed, mergeProps, ref } from 'vue'\nimport { genericComponent, propsFactory, useRender, wrapInArray } from '@/util'\n\n// Types\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { InternalItem } from '@/composables/items'\nimport type { MakeSlots } from '@/util'\nimport type { PropType } from 'vue'\n\nexport const makeSelectProps = propsFactory({\n  chips: Boolean,\n  closableChips: Boolean,\n  eager: Boolean,\n  hideNoData: Boolean,\n  hideSelected: Boolean,\n  menu: Boolean,\n  menuIcon: {\n    type: IconValue,\n    default: '$dropdown',\n  },\n  menuProps: {\n    type: Object as PropType<VMenu['$props']>,\n  },\n  modelValue: {\n    type: null,\n    default: () => ([]),\n  },\n  multiple: Boolean,\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText',\n  },\n  openOnClear: Boolean,\n  readonly: Boolean,\n\n  ...makeItemsProps({ itemChildren: false }),\n}, 'select')\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = T extends Primitive\n  ? T\n  : (ReturnObject extends true ? T : any)\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? Val<T, ReturnObject>[]\n    : Val<T, ReturnObject>\n\nexport const VSelect = genericComponent<new <\n  T,\n  ReturnObject extends boolean = false,\n  Multiple extends boolean = false,\n  V extends Value<T, ReturnObject, Multiple> = Value<T, ReturnObject, Multiple>\n>() => {\n  $props: {\n    items?: readonly T[]\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: Readonly<V>\n    'onUpdate:modelValue'?: (val: V) => void\n  }\n  $slots: Omit<VInputSlots & VFieldSlots, 'default'> & MakeSlots<{\n    item: [{ item: T, index: number, props: Record<string, unknown> }]\n    chip: [{ item: T, index: number, props: Record<string, unknown> }]\n    selection: [{ item: T, index: number }]\n    'no-data': []\n  }>\n}>()({\n  name: 'VSelect',\n\n  props: {\n    ...makeSelectProps(),\n    ...makeTransitionProps({ transition: { component: VDialogTransition } }),\n  },\n\n  emits: {\n    'update:modelValue': (val: any) => true,\n    'update:menu': (val: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref<VTextField>()\n    const menu = useProxiedModel(props, 'menu')\n    const { items, transformIn, transformOut } = useItems(props)\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const selections = computed(() => {\n      return model.value.map(v => {\n        return items.value.find(item => item.value === v.value) || v\n      })\n    })\n    const selected = computed(() => selections.value.map(selection => selection.props.value))\n\n    function onClear (e: MouseEvent) {\n      model.value = []\n\n      if (props.openOnClear) {\n        menu.value = true\n      }\n    }\n    function onClickControl () {\n      if (\n        (props.hideNoData && !items.value.length) ||\n        props.readonly\n      ) return\n\n      menu.value = !menu.value\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (props.readonly) return\n\n      if (['Enter', 'ArrowDown', ' '].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape', 'Tab'].includes(e.key)) {\n        menu.value = false\n      }\n    }\n    function select (item: InternalItem) {\n      if (props.multiple) {\n        const index = selected.value.findIndex(selection => selection === item.value)\n\n        if (index === -1) {\n          model.value = [...model.value, item]\n        } else {\n          const value = [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        }\n      } else {\n        model.value = [item]\n        menu.value = false\n      }\n    }\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          modelValue={ model.value.map(v => v.props.value).join(', ') }\n          onUpdate:modelValue={ v => { if (v == null) model.value = [] } }\n          validationValue={ model.externalValue }\n          dirty={ model.value.length > 0 }\n          class={[\n            'v-select',\n            {\n              'v-select--active-menu': menu.value,\n              'v-select--chips': !!props.chips,\n              [`v-select--${props.multiple ? 'multiple' : 'single'}`]: true,\n              'v-select--selected': model.value.length,\n            },\n          ]}\n          appendInnerIcon={ props.menuIcon }\n          readonly\n          onClick:clear={ onClear }\n          onClick:control={ onClickControl }\n          onBlur={ () => menu.value = false }\n          onKeydown={ onKeydown }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-select__content\"\n                  eager={ props.eager }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  { ...props.menuProps }\n                >\n                  <VList\n                    selected={ selected.value }\n                    selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                    onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                  >\n                    { !items.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                      <VListItem title={ t(props.noDataText) } />\n                    )) }\n\n                    { slots['prepend-item']?.() }\n\n                    { items.value.map((item, index) => slots.item?.({\n                      item,\n                      index,\n                      props: mergeProps(item.props, { onClick: () => select(item) }),\n                    }) ?? (\n                      <VListItem\n                        key={ index }\n                        { ...item.props }\n                        onClick={ () => select(item) }\n                      >\n                        {{\n                          prepend: ({ isSelected }) => props.multiple && !props.hideSelected ? (\n                            <VCheckboxBtn modelValue={ isSelected } ripple={ false } />\n                          ) : undefined,\n                        }}\n                      </VListItem>\n                    )) }\n\n                    { slots['append-item']?.() }\n                  </VList>\n                </VMenu>\n\n                { selections.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    modelValue: true,\n                  }\n\n                  return (\n                    <div key={ index } class=\"v-select__selection\">\n                      { hasChips ? (\n                        <VDefaultsProvider\n                          defaults={{\n                            VChip: {\n                              closable: props.closableChips,\n                              size: 'small',\n                              text: item.title,\n                            },\n                          }}\n                        >\n                          { slots.chip\n                            ? slots.chip({ item, index, props: slotProps })\n                            : (<VChip { ...slotProps } />)\n                          }\n                        </VDefaultsProvider>\n                      ) : (\n                        slots.selection\n                          ? slots.selection({ item, index })\n                          : (\n                            <span class=\"v-select__selection-text\">\n                              { item.title }\n                              { props.multiple && (index < selections.value.length - 1) && (\n                                <span class=\"v-select__selection-comma\">,</span>\n                              ) }\n                            </span>\n                          )\n                      )}\n                    </div>\n                  )\n                }) }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      menu,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VSelect = InstanceType<typeof VSelect>\n", "// Styles\nimport './VCheckbox.sass'\n\n// Components\nimport { filterInputProps, makeVInputProps, VInput } from '@/components/VInput/VInput'\nimport { filterCheckboxBtnProps, makeVCheckboxBtnProps, VCheckboxBtn } from './VCheckboxBtn'\n\n// Utilities\nimport { computed } from 'vue'\nimport { defineComponent, filterInputAttrs, getUid, useRender } from '@/util'\n\nexport const VCheckbox = defineComponent({\n  name: 'VCheckbox',\n\n  inheritAttrs: false,\n\n  props: {\n    ...makeVInputProps(),\n    ...makeVCheckboxBtnProps(),\n  },\n\n  setup (props, { attrs, slots }) {\n    const uid = getUid()\n    const id = computed(() => props.id || `checkbox-${uid}`)\n\n    useRender(() => {\n      const [inputAttrs, controlAttrs] = filterInputAttrs(attrs)\n      const [inputProps, _1] = filterInputProps(props)\n      const [checkboxProps, _2] = filterCheckboxBtnProps(props)\n\n      return (\n        <VInput\n          class=\"v-checkbox\"\n          { ...inputAttrs }\n          { ...inputProps }\n          id={ id.value }\n        >\n          {{\n            ...slots,\n            default: ({\n              id,\n              isDisabled,\n              isReadonly,\n            }) => (\n              <VCheckboxBtn\n                { ...checkboxProps }\n                id={ id.value }\n                disabled={ isDisabled.value }\n                readonly={ isReadonly.value }\n                { ...controlAttrs }\n                v-slots={ slots }\n              />\n            ),\n          }}\n        </VInput>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCheckbox = InstanceType<typeof VCheckbox>\n", "// Styles\nimport './VSelectionControl.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\nimport { VLabel } from '@/components/VLabel'\nimport { VSelectionControlGroupSymbol } from '@/components/VSelectionControlGroup/VSelectionControlGroup'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeThemeProps } from '@/composables/theme'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useTextColor } from '@/composables/color'\n\n// Utilities\nimport { computed, inject, ref } from 'vue'\nimport {\n  deepEqual,\n  filterInputAttrs,\n  genericComponent,\n  getUid,\n  pick,\n  propsFactory,\n  SUPPORTS_FOCUS_VISIBLE,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { ComputedRef, ExtractPropTypes, PropType, Ref, WritableComputedRef } from 'vue'\nimport type { MakeSlots } from '@/util'\n\nexport type SelectionControlSlot = {\n  model: WritableComputedRef<any>\n  isReadonly: ComputedRef<boolean>\n  isDisabled: ComputedRef<boolean>\n  textColorClasses: Ref<string[]>\n  props: {\n    onBlur: (e: Event) => void\n    onFocus: (e: FocusEvent) => void\n    id: string\n  }\n}\n\nexport const makeSelectionControlProps = propsFactory({\n  color: String,\n  disabled: Boolean,\n  error: Boolean,\n  id: String,\n  inline: Boolean,\n  label: String,\n  falseIcon: IconValue,\n  trueIcon: IconValue,\n  ripple: {\n    type: Boolean,\n    default: true,\n  },\n  multiple: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  name: String,\n  readonly: Boolean,\n  trueValue: null,\n  falseValue: null,\n  modelValue: null,\n  type: String,\n  value: null,\n  valueComparator: {\n    type: Function as PropType<typeof deepEqual>,\n    default: deepEqual,\n  },\n\n  ...makeThemeProps(),\n  ...makeDensityProps(),\n})\n\nexport function useSelectionControl (\n  props: ExtractPropTypes<ReturnType<typeof makeSelectionControlProps>> & {\n    'onUpdate:modelValue': ((val: any) => void) | undefined\n  }\n) {\n  const group = inject(VSelectionControlGroupSymbol, undefined)\n  const { densityClasses } = useDensity(props)\n  const modelValue = useProxiedModel(props, 'modelValue')\n  const trueValue = computed(() => (\n    props.trueValue !== undefined ? props.trueValue\n    : props.value !== undefined ? props.value\n    : true\n  ))\n  const falseValue = computed(() => props.falseValue !== undefined ? props.falseValue : false)\n  const isMultiple = computed(() => (\n    group?.multiple.value ||\n    !!props.multiple ||\n    (props.multiple == null && Array.isArray(modelValue.value))\n  ))\n  const model = computed({\n    get () {\n      const val = group ? group.modelValue.value : modelValue.value\n\n      return isMultiple.value\n        ? val.some((v: any) => props.valueComparator(v, trueValue.value))\n        : props.valueComparator(val, trueValue.value)\n    },\n    set (val: boolean) {\n      if (props.readonly) return\n\n      const currentValue = val ? trueValue.value : falseValue.value\n\n      let newVal = currentValue\n\n      if (isMultiple.value) {\n        newVal = val\n          ? [...wrapInArray(modelValue.value), currentValue]\n          : wrapInArray(modelValue.value).filter((item: any) => !props.valueComparator(item, trueValue.value))\n      }\n\n      if (group) {\n        group.modelValue.value = newVal\n      } else {\n        modelValue.value = newVal\n      }\n    },\n  })\n  const { textColorClasses, textColorStyles } = useTextColor(computed(() => {\n    return (\n      model.value &&\n      !props.error &&\n      !props.disabled\n    ) ? props.color : undefined\n  }))\n  const icon = computed(() => {\n    return model.value\n      ? group?.trueIcon.value ?? props.trueIcon\n      : group?.falseIcon.value ?? props.falseIcon\n  })\n\n  return {\n    group,\n    densityClasses,\n    trueValue,\n    falseValue,\n    model,\n    textColorClasses,\n    textColorStyles,\n    icon,\n  }\n}\n\nexport const VSelectionControl = genericComponent<new <T>() => {\n  $props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (val: T) => any\n  }\n  $slots: MakeSlots<{\n    default: []\n    input: [SelectionControlSlot]\n  }>\n}>()({\n  name: 'VSelectionControl',\n\n  directives: { Ripple },\n\n  inheritAttrs: false,\n\n  props: makeSelectionControlProps(),\n\n  emits: {\n    'update:modelValue': (val: any) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const {\n      densityClasses,\n      group,\n      icon,\n      model,\n      textColorClasses,\n      textColorStyles,\n      trueValue,\n    } = useSelectionControl(props)\n    const uid = getUid()\n    const id = computed(() => props.id || `input-${uid}`)\n    const isFocused = ref(false)\n    const isFocusVisible = ref(false)\n    const input = ref<HTMLInputElement>()\n\n    function onFocus (e: FocusEvent) {\n      isFocused.value = true\n      if (\n        !SUPPORTS_FOCUS_VISIBLE ||\n        (SUPPORTS_FOCUS_VISIBLE && (e.target as HTMLElement).matches(':focus-visible'))\n      ) {\n        isFocusVisible.value = true\n      }\n    }\n\n    function onBlur () {\n      isFocused.value = false\n      isFocusVisible.value = false\n    }\n\n    function onInput (e: Event) {\n      model.value = (e.target as HTMLInputElement).checked\n    }\n\n    useRender(() => {\n      const label = slots.label\n        ? slots.label({\n          label: props.label,\n          props: { for: id.value },\n        })\n        : props.label\n      const type = group?.type.value ?? props.type\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n\n      return (\n        <div\n          class={[\n            'v-selection-control',\n            {\n              'v-selection-control--dirty': model.value,\n              'v-selection-control--disabled': props.disabled,\n              'v-selection-control--error': props.error,\n              'v-selection-control--focused': isFocused.value,\n              'v-selection-control--focus-visible': isFocusVisible.value,\n              'v-selection-control--inline': group?.inline.value || props.inline,\n            },\n            densityClasses.value,\n          ]}\n          { ...rootAttrs }\n        >\n          <div\n            class={[\n              'v-selection-control__wrapper',\n              textColorClasses.value,\n            ]}\n            style={ textColorStyles.value }\n          >\n            { slots.default?.() }\n\n            <div\n              class={[\n                'v-selection-control__input',\n              ]}\n              v-ripple={ props.ripple && [\n                !props.disabled && !props.readonly,\n                null,\n                ['center', 'circle'],\n              ]}\n            >\n              { icon.value && <VIcon key=\"icon\" icon={ icon.value } /> }\n\n              <input\n                ref={ input }\n                checked={ model.value }\n                disabled={ props.disabled }\n                id={ id.value }\n                onBlur={ onBlur }\n                onFocus={ onFocus }\n                onInput={ onInput }\n                aria-readonly={ props.readonly }\n                type={ type }\n                value={ trueValue.value }\n                name={ group?.name.value ?? props.name }\n                aria-checked={ type === 'checkbox' ? model.value : undefined }\n                { ...inputAttrs }\n              />\n\n              { slots.input?.({\n                model,\n                textColorClasses,\n                props: {\n                  onFocus,\n                  onBlur,\n                  id: id.value,\n                },\n              }) }\n            </div>\n          </div>\n\n          { label && (\n            <VLabel for={ id.value }>\n              { label }\n            </VLabel>\n          ) }\n        </div>\n      )\n    })\n\n    return {\n      isFocused,\n      input,\n    }\n  },\n})\n\nexport type VSelectionControl = InstanceType<typeof VSelectionControl>\n\nexport function filterControlProps (props: ExtractPropTypes<ReturnType<typeof makeSelectionControlProps>>) {\n  return pick(props, Object.keys(VSelectionControl.props) as any)\n}\n", "// Styles\nimport './VSelectionControlGroup.sass'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, provide, toRef } from 'vue'\nimport { defineComponent, getUid, useRender } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType, Ref } from 'vue'\n\nexport interface VSelectionGroupContext {\n  disabled: Ref<boolean>\n  inline: Ref<boolean>\n  name: Ref<string | undefined>\n  modelValue: Ref<any>\n  multiple: Ref<boolean>\n  trueIcon: Ref<IconValue | undefined>\n  falseIcon: Ref<IconValue | undefined>\n  readonly: Ref<boolean>\n  type: Ref<string | undefined>\n}\n\nexport const VSelectionControlGroupSymbol: InjectionKey<VSelectionGroupContext> = Symbol.for('vuetify:selection-control-group')\n\nexport const VSelectionControlGroup = defineComponent({\n  name: 'VSelectionControlGroup',\n\n  props: {\n    disabled: Boolean,\n    id: String,\n    inline: Boolean,\n    name: String,\n    falseIcon: IconValue,\n    trueIcon: IconValue,\n    multiple: {\n      type: Boolean as PropType<boolean | null>,\n      default: null,\n    },\n    readonly: Boolean,\n    type: String,\n    modelValue: null,\n  },\n\n  emits: {\n    'update:modelValue': (val: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const modelValue = useProxiedModel(props, 'modelValue')\n    const uid = getUid()\n    const id = computed(() => props.id || `v-selection-control-group-${uid}`)\n    const name = computed(() => props.name || id.value)\n\n    provide(VSelectionControlGroupSymbol, {\n      disabled: toRef(props, 'disabled'),\n      inline: toRef(props, 'inline'),\n      modelValue,\n      multiple: computed(() => !!props.multiple || (props.multiple == null && Array.isArray(modelValue.value))),\n      name,\n      falseIcon: toRef(props, 'falseIcon'),\n      trueIcon: toRef(props, 'trueIcon'),\n      readonly: toRef(props, 'readonly'),\n      type: toRef(props, 'type'),\n    })\n\n    useRender(() => (\n      <div\n        class={[\n          'v-selection-control-group',\n          { 'v-selection-control-group--inline': props.inline },\n        ]}\n        aria-labelled-by={ props.type === 'radio' ? id.value : undefined }\n        role={ props.type === 'radio' ? 'radiogroup' : undefined }\n      >\n        { slots.default?.() }\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VSelectionControlGroup = InstanceType<typeof VSelectionControlGroup>\n", "// Components\nimport { makeSelectionControlProps, VSelectionControl } from '../VSelectionControl/VSelectionControl'\n\n// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { IconValue } from '@/composables/icons'\n\n// Utilities\nimport { computed } from 'vue'\nimport { defineComponent, pick, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { ExtractPropTypes } from 'vue'\n\nexport const makeVCheckboxBtnProps = propsFactory({\n  indeterminate: Boolean,\n  indeterminateIcon: {\n    type: IconValue,\n    default: '$checkboxIndeterminate',\n  },\n\n  ...makeSelectionControlProps({\n    falseIcon: '$checkboxOff',\n    trueIcon: '$checkboxOn',\n  }),\n})\n\nexport const VCheckboxBtn = defineComponent({\n  name: 'VCheckboxBtn',\n\n  props: makeVCheckboxBtnProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n    'update:indeterminate': (val: boolean) => true,\n  },\n\n  setup (props, { slots, emit }) {\n    const indeterminate = useProxiedModel(props, 'indeterminate')\n\n    function onChange (v: any) {\n      if (indeterminate.value) {\n        indeterminate.value = false\n      }\n\n      emit('update:modelValue', v)\n    }\n\n    const falseIcon = computed(() => {\n      return props.indeterminate\n        ? props.indeterminateIcon\n        : props.falseIcon\n    })\n\n    const trueIcon = computed(() => {\n      return props.indeterminate\n        ? props.indeterminateIcon\n        : props.trueIcon\n    })\n\n    useRender(() => (\n      <VSelectionControl\n        { ...props }\n        class=\"v-checkbox-btn\"\n        type=\"checkbox\"\n        inline\n        onUpdate:modelValue={ onChange }\n        falseIcon={ falseIcon.value }\n        trueIcon={ trueIcon.value }\n        aria-checked={ props.indeterminate ? 'mixed' : undefined }\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VCheckboxBtn = InstanceType<typeof VCheckboxBtn>\n\nexport function filterCheckboxBtnProps (props: ExtractPropTypes<ReturnType<typeof makeVCheckboxBtnProps>>) {\n  return pick(props, Object.keys(VCheckboxBtn.props) as any)\n}\n", "/* eslint-disable complexity */\n// Styles\nimport './VChip.sass'\n\n// Components\nimport { VAvatar } from '@/components/VAvatar'\nimport { VChipGroupSymbol } from '@/components/VChipGroup/VChipGroup'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VExpandXTransition } from '@/components/transitions'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { IconValue } from '@/composables/icons'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { defineComponent } from '@/util'\n\nexport const VChip = defineComponent({\n  name: 'VChip',\n\n  directives: { Ripple },\n\n  props: {\n    activeClass: String,\n    appendAvatar: String,\n    appendIcon: IconValue,\n    closable: Boolean,\n    closeIcon: {\n      type: IconValue,\n      default: '$delete',\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close',\n    },\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    pill: Boolean,\n    prependAvatar: String,\n    prependIcon: IconValue,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    text: String,\n    modelValue: {\n      type: Boolean,\n      default: true,\n    },\n\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeElevationProps(),\n    ...makeGroupItemProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeSizeProps(),\n    ...makeTagProps({ tag: 'span' }),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'tonal' } as const),\n  },\n\n  emits: {\n    'click:close': (e: Event) => true,\n    'update:active': (value: boolean) => true,\n    'update:modelValue': (value: boolean) => true,\n    'group:selected': (val: { value: boolean }) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses } = useSize(props)\n    const { themeClasses } = provideTheme(props)\n\n    const isActive = useProxiedModel(props, 'modelValue')\n    const group = useGroupItem(props, VChipGroupSymbol, false)\n    const link = useLink(props, attrs)\n\n    function onCloseClick (e: Event) {\n      isActive.value = false\n\n      emit('click:close', e)\n    }\n\n    return () => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasAppend = !!(slots.append || props.appendIcon || props.appendAvatar)\n      const hasClose = !!(slots.close || props.closable)\n      const hasFilter = !!(slots.filter || props.filter) && group\n      const hasPrepend = !!(slots.prepend || props.prependIcon || props.prependAvatar)\n      const hasColor = !group || group.isSelected.value\n      const isClickable = !props.disabled && (!!group || link.isClickable.value || props.link)\n      const onClickFunc = props.link ? props.link : group?.toggle\n\n      return isActive.value && (\n        <Tag\n          class={[\n            'v-chip',\n            {\n              'v-chip--disabled': props.disabled,\n              'v-chip--label': props.label,\n              'v-chip--link': isClickable,\n              'v-chip--filter': hasFilter,\n              'v-chip--pill': props.pill,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            hasColor ? colorClasses.value : undefined,\n            densityClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            sizeClasses.value,\n            variantClasses.value,\n            group?.selectedClass.value,\n          ]}\n          style={[\n            hasColor ? colorStyles.value : undefined,\n          ]}\n          disabled={ props.disabled || undefined }\n          draggable={ props.draggable }\n          href={ link.href.value }\n          v-ripple={ [isClickable && props.ripple, null] }\n          onClick={ isClickable && onClickFunc }\n        >\n          { genOverlays(isClickable, 'v-chip') }\n\n          { hasFilter && (\n            <VDefaultsProvider\n              key=\"filter\"\n              defaults={{\n                VIcon: { icon: props.filterIcon },\n              }}\n            >\n              <VExpandXTransition>\n                <div\n                  class=\"v-chip__filter\"\n                  v-show={ group.isSelected.value }\n                >\n                  { slots.filter ? slots.filter() : (<VIcon />) }\n                </div>\n              </VExpandXTransition>\n            </VDefaultsProvider>\n          ) }\n\n          { hasPrepend && (\n            <VDefaultsProvider\n              key=\"prepend\"\n              defaults={{\n                VAvatar: {\n                  image: props.prependAvatar,\n                },\n                VIcon: {\n                  icon: props.prependIcon,\n                },\n              }}\n            >\n              { slots.prepend\n                ? (\n                  <div class=\"v-chip__prepend\">\n                    { slots.prepend() }\n                  </div>\n                )\n                : props.prependAvatar ? (<VAvatar start />)\n                : props.prependIcon ? (<VIcon start />)\n                : undefined\n              }\n            </VDefaultsProvider>\n          ) }\n\n          { slots.default?.({\n            isSelected: group?.isSelected.value,\n            selectedClass: group?.selectedClass.value,\n            select: group?.select,\n            toggle: group?.toggle,\n            value: group?.value.value,\n            disabled: props.disabled,\n          }) ?? props.text }\n\n          { hasAppend && (\n            <VDefaultsProvider\n              key=\"append\"\n              defaults={{\n                VAvatar: {\n                  image: props.appendAvatar,\n                },\n                VIcon: {\n                  icon: props.appendIcon,\n                },\n              }}\n            >\n              { slots.append\n                ? (\n                  <div class=\"v-chip__append\">\n                    { slots.append() }\n                  </div>\n                )\n                : props.appendAvatar ? (<VAvatar end />)\n                : props.appendIcon ? (<VIcon end />)\n                : undefined\n              }\n            </VDefaultsProvider>\n          ) }\n\n          { hasClose && (\n            <VDefaultsProvider\n              key=\"close\"\n              defaults={{\n                VIcon: {\n                  icon: props.closeIcon,\n                  size: 'x-small',\n                },\n              }}\n            >\n              <div\n                class=\"v-chip__close\"\n                onClick={ onCloseClick }\n              >\n                { slots.close ? slots.close() : (<VIcon />) }\n              </div>\n            </VDefaultsProvider>\n          ) }\n        </Tag>\n      )\n    }\n  },\n})\n\nexport type VChip = InstanceType<typeof VChip>\n", "// Styles\nimport './VChipGroup.sass'\n\n// Composables\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { makeVariantProps } from '@/composables/variant'\nimport { provideDefaults } from '@/composables/defaults'\n\n// Utilities\nimport { deepEqual, defineComponent, useRender } from '@/util'\nimport { toRef } from 'vue'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const VChipGroupSymbol = Symbol.for('vuetify:v-chip-group')\n\nexport const VChipGroup = defineComponent({\n  name: 'VChipGroup',\n\n  props: {\n    column: Boolean,\n    filter: Boolean,\n    valueComparator: {\n      type: Function as PropType<typeof deepEqual>,\n      default: deepEqual,\n    },\n\n    ...makeGroupProps({ selectedClass: 'v-chip--selected' }),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'tonal' } as const),\n  },\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { isSelected, select, next, prev, selected } = useGroup(props, VChipGroupSymbol)\n\n    provideDefaults({\n      VChip: {\n        color: toRef(props, 'color'),\n        filter: toRef(props, 'filter'),\n        variant: toRef(props, 'variant'),\n      },\n    })\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-chip-group',\n          {\n            'v-chip-group--column': props.column,\n          },\n          themeClasses.value,\n        ]}\n      >\n        { slots.default?.({\n          isSelected,\n          select,\n          next,\n          prev,\n          selected: selected.value,\n        }) }\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VChipGroup = InstanceType<typeof VChipGroup>\n", "// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VOverlay } from '@/components/VOverlay'\n\n// Composables\nimport { makeTransitionProps } from '@/composables/transition'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useScopeId } from '@/composables/scopeId'\n\n// Utilities\nimport { computed, inject, provide, ref, watch } from 'vue'\nimport { genericComponent, getUid, useRender } from '@/util'\nimport { VMenuSymbol } from './shared'\n\n// Types\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\n\nexport const VMenu = genericComponent<new () => {\n  $slots: OverlaySlots\n}>()({\n  name: 'VMenu',\n\n  inheritAttrs: false,\n\n  props: {\n    // TODO\n    // disableKeys: Boolean,\n    modelValue: Boolean,\n    id: String,\n\n    ...makeTransitionProps({\n      transition: { component: VDialogTransition },\n    } as const),\n  },\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { scopeId } = useScopeId()\n\n    const uid = getUid()\n    const id = computed(() => props.id || `v-menu-${uid}`)\n\n    const overlay = ref<VOverlay>()\n\n    const parent = inject(VMenuSymbol, null)\n    let openChildren = 0\n    provide(VMenuSymbol, {\n      register () {\n        ++openChildren\n      },\n      unregister () {\n        --openChildren\n      },\n      closeParents () {\n        setTimeout(() => {\n          if (!openChildren) {\n            isActive.value = false\n            parent?.closeParents()\n          }\n        }, 40)\n      },\n    })\n\n    watch(isActive, val => {\n      val ? parent?.register() : parent?.unregister()\n    })\n\n    function onClickOutside () {\n      parent?.closeParents()\n    }\n\n    useRender(() => (\n      <VOverlay\n        ref={ overlay }\n        v-model={ isActive.value }\n        class={[\n          'v-menu',\n        ]}\n        transition={ props.transition }\n        absolute\n        closeOnContentClick\n        locationStrategy=\"connected\"\n        scrollStrategy=\"reposition\"\n        scrim={ false }\n        openDelay=\"300\"\n        closeDelay=\"250\"\n        activatorProps={{\n          'aria-haspopup': 'menu',\n          'aria-expanded': String(isActive.value),\n          'aria-owns': id.value,\n        }}\n        onClick:outside={ onClickOutside }\n        { ...scopeId }\n        { ...attrs }\n      >\n        {{\n          activator: slots.activator,\n          default: () => (\n            <VDefaultsProvider root>\n              { slots.default?.() }\n            </VDefaultsProvider>\n          ),\n        }}\n      </VOverlay>\n    ))\n\n    return forwardRefs({ id }, overlay)\n  },\n})\n\nexport type VMenu = InstanceType<typeof VMenu>\n", "// Styles\nimport './VOverlay.sass'\n\n// Composables\nimport { makeActivatorProps, useActivator } from './useActivator'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeLazyProps, useLazy } from '@/composables/lazy'\nimport { makeLocationStrategyProps, useLocationStrategies } from './locationStrategies'\nimport { makeScrollStrategyProps, useScrollStrategies } from './scrollStrategies'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\nimport { useBackButton, useRouter } from '@/composables/router'\nimport { useBackgroundColor } from '@/composables/color'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useRtl } from '@/composables/rtl'\nimport { useStack } from '@/composables/stack'\nimport { useTeleport } from '@/composables/teleport'\nimport { useToggleScope } from '@/composables/toggleScope'\n\n// Directives\nimport { ClickOutside } from '@/directives/click-outside'\n\n// Utilities\nimport {\n  animate,\n  convertToUnit,\n  genericComponent,\n  getScrollParent,\n  IN_BROWSER,\n  standardEasing,\n  useRender,\n} from '@/util'\nimport {\n  computed,\n  mergeProps,\n  ref,\n  Teleport,\n  toHandlers,\n  toRef,\n  Transition,\n  watch,\n} from 'vue'\n\n// Types\nimport type { BackgroundColorData } from '@/composables/color'\nimport type { MakeSlots } from '@/util'\nimport type { PropType, Ref } from 'vue'\n\ninterface ScrimProps {\n  [key: string]: unknown\n  modelValue: boolean\n  color: BackgroundColorData\n}\nfunction Scrim (props: ScrimProps) {\n  const { modelValue, color, ...rest } = props\n  return (\n    <Transition name=\"fade-transition\" appear>\n      { props.modelValue && (\n        <div\n          class={[\n            'v-overlay__scrim',\n            props.color.backgroundColorClasses.value,\n          ]}\n          style={ props.color.backgroundColorStyles.value }\n          { ...rest }\n        />\n      )}\n    </Transition>\n  )\n}\n\nexport type OverlaySlots = MakeSlots<{\n  default: [{ isActive: Ref<boolean> }]\n  activator: [{ isActive: boolean, props: Record<string, any> }]\n}>\n\nexport const VOverlay = genericComponent<new () => {\n  $slots: OverlaySlots\n}>()({\n  name: 'VOverlay',\n\n  directives: { ClickOutside },\n\n  inheritAttrs: false,\n\n  props: {\n    absolute: Boolean,\n    attach: [Boolean, String, Object] as PropType<boolean | string | Element>,\n    closeOnBack: {\n      type: Boolean,\n      default: true,\n    },\n    contained: Boolean,\n    contentClass: null,\n    contentProps: null,\n    disabled: Boolean,\n    noClickAnimation: Boolean,\n    modelValue: Boolean,\n    persistent: Boolean,\n    scrim: {\n      type: [String, Boolean],\n      default: true,\n    },\n    zIndex: {\n      type: [Number, String],\n      default: 2000,\n    },\n\n    ...makeActivatorProps(),\n    ...makeDimensionProps(),\n    ...makeLazyProps(),\n    ...makeLocationStrategyProps(),\n    ...makeScrollStrategyProps(),\n    ...makeThemeProps(),\n    ...makeTransitionProps(),\n  },\n\n  emits: {\n    'click:outside': (e: MouseEvent) => true,\n    'update:modelValue': (value: boolean) => true,\n    afterLeave: () => true,\n  },\n\n  setup (props, { slots, attrs, emit }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const isActive = computed({\n      get: () => model.value,\n      set: v => {\n        if (!(v && props.disabled)) model.value = v\n      },\n    })\n    const { teleportTarget } = useTeleport(computed(() => props.attach || props.contained))\n    const { themeClasses } = provideTheme(props)\n    const { rtlClasses, isRtl } = useRtl()\n    const { hasContent, onAfterLeave } = useLazy(props, isActive)\n    const scrimColor = useBackgroundColor(computed(() => {\n      return typeof props.scrim === 'string' ? props.scrim : null\n    }))\n    const { globalTop, localTop, stackStyles } = useStack(isActive, toRef(props, 'zIndex'))\n    const { activatorEl, activatorRef, activatorEvents, contentEvents, scrimEvents } = useActivator(props, { isActive, isTop: localTop })\n    const { dimensionStyles } = useDimension(props)\n\n    watch(() => props.disabled, v => {\n      if (v) isActive.value = false\n    })\n\n    const root = ref<HTMLElement>()\n    const contentEl = ref<HTMLElement>()\n    const { contentStyles, updateLocation } = useLocationStrategies(props, {\n      isRtl,\n      contentEl,\n      activatorEl,\n      isActive,\n    })\n    useScrollStrategies(props, {\n      root,\n      contentEl,\n      activatorEl,\n      isActive,\n      updateLocation,\n    })\n\n    function onClickOutside (e: MouseEvent) {\n      emit('click:outside', e)\n\n      if (!props.persistent) isActive.value = false\n      else animateClick()\n    }\n\n    function closeConditional () {\n      return isActive.value && globalTop.value\n    }\n\n    IN_BROWSER && watch(isActive, val => {\n      if (val) {\n        window.addEventListener('keydown', onKeydown)\n      } else {\n        window.removeEventListener('keydown', onKeydown)\n      }\n    }, { immediate: true })\n\n    function onKeydown (e: KeyboardEvent) {\n      if (e.key === 'Escape' && globalTop.value) {\n        if (!props.persistent) {\n          isActive.value = false\n        } else animateClick()\n      }\n    }\n\n    const router = useRouter()\n    useToggleScope(() => props.closeOnBack, () => {\n      useBackButton(router, next => {\n        if (globalTop.value && isActive.value) {\n          next(false)\n          if (!props.persistent) isActive.value = false\n          else animateClick()\n        } else {\n          next()\n        }\n      })\n    })\n\n    const top = ref<number>()\n    watch(() => isActive.value && (props.absolute || props.contained) && teleportTarget.value == null, val => {\n      if (val) {\n        const scrollParent = getScrollParent(root.value)\n        if (scrollParent && scrollParent !== document.scrollingElement) {\n          top.value = scrollParent.scrollTop\n        }\n      }\n    })\n\n    // Add a quick \"bounce\" animation to the content\n    function animateClick () {\n      if (props.noClickAnimation) return\n\n      contentEl.value && animate(contentEl.value, [\n        { transformOrigin: 'center' },\n        { transform: 'scale(1.03)' },\n        { transformOrigin: 'center' },\n      ], {\n        duration: 150,\n        easing: standardEasing,\n      })\n    }\n\n    useRender(() => (\n      <>\n        { slots.activator?.({\n          isActive: isActive.value,\n          props: mergeProps({\n            ref: activatorRef,\n          }, toHandlers(activatorEvents.value), props.activatorProps),\n        }) }\n\n        { IN_BROWSER && (\n          <Teleport\n            disabled={ !teleportTarget.value }\n            to={ teleportTarget.value }\n          >\n            { hasContent.value && (\n              <div\n                class={[\n                  'v-overlay',\n                  {\n                    'v-overlay--absolute': props.absolute || props.contained,\n                    'v-overlay--active': isActive.value,\n                    'v-overlay--contained': props.contained,\n                  },\n                  themeClasses.value,\n                  rtlClasses.value,\n                ]}\n                style={[stackStyles.value, { top: convertToUnit(top.value) }]}\n                ref={ root }\n                {...attrs}\n              >\n                <Scrim\n                  color={ scrimColor }\n                  modelValue={ isActive.value && !!props.scrim }\n                  { ...toHandlers(scrimEvents.value) }\n                />\n                <MaybeTransition\n                  appear\n                  persisted\n                  transition={ props.transition }\n                  target={ activatorEl.value }\n                  onAfterLeave={() => { onAfterLeave(); emit('afterLeave') }}\n                >\n                  <div\n                    ref={ contentEl }\n                    v-show={ isActive.value }\n                    v-click-outside={{ handler: onClickOutside, closeConditional, include: () => [activatorEl.value] }}\n                    class={[\n                      'v-overlay__content',\n                      props.contentClass,\n                    ]}\n                    style={[\n                      dimensionStyles.value,\n                      contentStyles.value,\n                    ]}\n                    { ...toHandlers(contentEvents.value) }\n                    { ...props.contentProps }\n                  >\n                    { slots.default?.({ isActive }) }\n                  </div>\n                </MaybeTransition>\n              </div>\n            )}\n          </Teleport>\n        ) }\n      </>\n    ))\n\n    return {\n      activatorEl,\n      animateClick,\n      contentEl,\n      globalTop,\n      localTop,\n      updateLocation,\n    }\n  },\n})\n\nexport type VOverlay = InstanceType<typeof VOverlay>\n", "// Utilities\nimport { IN_BROWSER, propsFactory } from '@/util'\n\n// Types\nexport interface DelayProps {\n  closeDelay?: number | string\n  openDelay?: number | string\n}\n\n// Composables\nexport const makeDelayProps = propsFactory({\n  closeDelay: [Number, String],\n  openDelay: [Number, String],\n}, 'delay')\n\nexport function useDelay (props: DelayProps, cb?: (value: boolean) => void) {\n  const delays: Partial<Record<keyof DelayProps, number>> = {}\n  const runDelayFactory = (prop: keyof DelayProps) => (): Promise<boolean> => {\n    // istanbul ignore next\n    if (!IN_BROWSER) return Promise.resolve(true)\n\n    const active = prop === 'openDelay'\n\n    delays.closeDelay && window.clearTimeout(delays.closeDelay)\n    delete delays.closeDelay\n\n    delays.openDelay && window.clearTimeout(delays.openDelay)\n    delete delays.openDelay\n\n    return new Promise(resolve => {\n      const delay = parseInt(props[prop] ?? 0, 10)\n\n      delays[prop] = window.setTimeout(() => {\n        cb?.(active)\n        resolve(active)\n      }, delay)\n    })\n  }\n\n  return {\n    runCloseDelay: runDelayFactory('closeDelay'),\n    runOpenDelay: runDelayFactory('openDelay'),\n  }\n}\n", "import type { InjectionKey } from 'vue'\n\ninterface MenuProvide {\n  register (): void\n  unregister (): void\n  closeParents (): void\n}\n\nexport const VMenuSymbol: InjectionKey<MenuProvide> = Symbol.for('vuetify:v-menu')\n", "// Composables\nimport { makeDelayProps, useDelay } from '@/composables/delay'\nimport { VMenuSymbol } from '@/components/VMenu/shared'\n\n// Utilities\nimport { getCurrentInstance, IN_BROWSER, isComponentInstance, propsFactory, SUPPORTS_FOCUS_VISIBLE } from '@/util'\nimport {\n  computed,\n  effectScope,\n  inject,\n  nextTick,\n  onScopeDispose,\n  ref,\n  watch,\n  watchEffect,\n} from 'vue'\n\n// Types\nimport type { DelayProps } from '@/composables/delay'\nimport type {\n  ComponentInternalInstance,\n  ComponentPublicInstance,\n  EffectScope,\n  PropType,\n  Ref,\n} from 'vue'\n\ninterface ActivatorProps extends DelayProps {\n  activator?: 'parent' | string | Element | ComponentPublicInstance\n  activatorProps: Record<string, any>\n\n  openOnClick: boolean | undefined\n  openOnHover: boolean\n  openOnFocus: boolean | undefined\n\n  closeOnContentClick: boolean\n}\n\nexport const makeActivatorProps = propsFactory({\n  activator: [String, Object] as PropType<ActivatorProps['activator']>,\n  activatorProps: {\n    type: Object as PropType<ActivatorProps['activatorProps']>,\n    default: () => ({}),\n  },\n\n  openOnClick: {\n    type: Boolean,\n    default: undefined,\n  },\n  openOnHover: Boolean,\n  openOnFocus: {\n    type: Boolean,\n    default: undefined,\n  },\n\n  closeOnContentClick: Boolean,\n\n  ...makeDelayProps(),\n})\n\nexport function useActivator (\n  props: ActivatorProps,\n  { isActive, isTop }: { isActive: Ref<boolean>, isTop: Ref<boolean> }\n) {\n  const activatorEl = ref<HTMLElement>()\n\n  let isHovered = false\n  let isFocused = false\n  let firstEnter = true\n\n  const openOnFocus = computed(() => props.openOnFocus || (props.openOnFocus == null && props.openOnHover))\n  const openOnClick = computed(() => props.openOnClick || (props.openOnClick == null && !props.openOnHover && !openOnFocus.value))\n\n  const { runOpenDelay, runCloseDelay } = useDelay(props, value => {\n    if (\n      value === (\n        (props.openOnHover && isHovered) ||\n        (openOnFocus.value && isFocused)\n      ) && !(props.openOnHover && isActive.value && !isTop.value)\n    ) {\n      if (isActive.value !== value) {\n        firstEnter = true\n      }\n      isActive.value = value\n    }\n  })\n\n  const availableEvents = {\n    click: (e: MouseEvent) => {\n      e.stopPropagation()\n      activatorEl.value = (e.currentTarget || e.target) as HTMLElement\n      isActive.value = !isActive.value\n    },\n    mouseenter: (e: MouseEvent) => {\n      isHovered = true\n      activatorEl.value = (e.currentTarget || e.target) as HTMLElement\n      runOpenDelay()\n    },\n    mouseleave: (e: MouseEvent) => {\n      isHovered = false\n      runCloseDelay()\n    },\n    focus: (e: FocusEvent) => {\n      if (\n        SUPPORTS_FOCUS_VISIBLE &&\n        !(e.target as HTMLElement).matches(':focus-visible')\n      ) return\n\n      isFocused = true\n      e.stopPropagation()\n      activatorEl.value = (e.currentTarget || e.target) as HTMLElement\n\n      runOpenDelay()\n    },\n    blur: (e: FocusEvent) => {\n      isFocused = false\n      e.stopPropagation()\n\n      runCloseDelay()\n    },\n  }\n\n  const activatorEvents = computed(() => {\n    const events: Partial<typeof availableEvents> = {}\n\n    if (openOnClick.value) {\n      events.click = availableEvents.click\n    }\n    if (props.openOnHover) {\n      events.mouseenter = availableEvents.mouseenter\n      events.mouseleave = availableEvents.mouseleave\n    }\n    if (openOnFocus.value) {\n      events.focus = availableEvents.focus\n      events.blur = availableEvents.blur\n    }\n\n    return events\n  })\n\n  const contentEvents = computed(() => {\n    const events: Partial<typeof availableEvents> = {}\n\n    if (props.openOnHover) {\n      events.mouseenter = () => {\n        isHovered = true\n        runOpenDelay()\n      }\n      events.mouseleave = () => {\n        isHovered = false\n        runCloseDelay()\n      }\n    }\n\n    if (props.closeOnContentClick) {\n      const menu = inject(VMenuSymbol, null)\n      events.click = () => {\n        isActive.value = false\n        menu?.closeParents()\n      }\n    }\n\n    return events\n  })\n\n  const scrimEvents = computed(() => {\n    const events: Partial<typeof availableEvents> = {}\n    if (props.openOnHover) {\n      events.mouseenter = () => {\n        if (firstEnter) {\n          isHovered = true\n          firstEnter = false\n          runOpenDelay()\n        }\n      }\n      events.mouseleave = () => {\n        isHovered = false\n        runCloseDelay()\n      }\n    }\n\n    return events\n  })\n\n  watch(isTop, val => {\n    if (val && (\n      (props.openOnHover && !isHovered && (!openOnFocus.value || !isFocused)) ||\n      (openOnFocus.value && !isFocused && (!props.openOnHover || !isHovered))\n    )) {\n      isActive.value = false\n    }\n  })\n\n  const activatorRef = ref()\n  watchEffect(() => {\n    if (!activatorRef.value) return\n\n    nextTick(() => {\n      const activator = activatorRef.value\n      activatorEl.value = isComponentInstance(activator) ? activator.$el : activator\n    })\n  })\n\n  const vm = getCurrentInstance('useActivator')\n  let scope: EffectScope\n  watch(() => !!props.activator, val => {\n    if (val && IN_BROWSER) {\n      scope = effectScope()\n      scope.run(() => {\n        _useActivator(props, vm, { activatorEl, activatorEvents })\n      })\n    } else if (scope) {\n      scope.stop()\n    }\n  }, { flush: 'post', immediate: true })\n\n  return { activatorEl, activatorRef, activatorEvents, contentEvents, scrimEvents }\n}\n\nfunction _useActivator (\n  props: ActivatorProps,\n  vm: ComponentInternalInstance,\n  { activatorEl, activatorEvents }: Pick<ReturnType<typeof useActivator>, 'activatorEl' | 'activatorEvents'>\n) {\n  watch(() => props.activator, (val, oldVal) => {\n    if (oldVal && val !== oldVal) {\n      const activator = getActivator(oldVal)\n      activator && unbindActivatorProps(activator)\n    }\n    if (val) {\n      nextTick(() => bindActivatorProps())\n    }\n  }, { immediate: true })\n\n  watch(() => props.activatorProps, () => {\n    bindActivatorProps()\n  })\n\n  onScopeDispose(() => {\n    unbindActivatorProps()\n  })\n\n  function bindActivatorProps (el = getActivator(), _props = props.activatorProps) {\n    if (!el) return\n\n    Object.entries(activatorEvents.value).forEach(([name, cb]) => {\n      el.addEventListener(name, cb as (e: Event) => void)\n    })\n\n    Object.keys(_props).forEach(k => {\n      if (_props[k] == null) {\n        el.removeAttribute(k)\n      } else {\n        el.setAttribute(k, _props[k])\n      }\n    })\n  }\n\n  function unbindActivatorProps (el = getActivator(), _props = props.activatorProps) {\n    if (!el) return\n\n    Object.entries(activatorEvents.value).forEach(([name, cb]) => {\n      el.removeEventListener(name, cb as (e: Event) => void)\n    })\n\n    Object.keys(_props).forEach(k => {\n      el.removeAttribute(k)\n    })\n  }\n\n  function getActivator (selector = props.activator): HTMLElement | undefined {\n    let activator\n    if (selector) {\n      if (selector === 'parent') {\n        let el = vm?.proxy?.$el?.parentNode\n        while (el.hasAttribute('data-no-activator')) {\n          el = el.parentNode\n        }\n        activator = el\n      } else if (typeof selector === 'string') {\n        // Selector\n        activator = document.querySelector(selector)\n      } else if ('$el' in selector) {\n        // Component (ref)\n        activator = selector.$el\n      } else {\n        // HTMLElement | Element\n        activator = selector\n      }\n    }\n\n    // The activator should only be a valid element (Ignore comments and text nodes)\n    activatorEl.value = activator?.nodeType === Node.ELEMENT_NODE ? activator : null\n\n    return activatorEl.value\n  }\n}\n", "// Utilities\nimport { computed, ref, watch } from 'vue'\n\n// Types\nimport type { Ref } from 'vue'\nimport { propsFactory } from '@/util'\n\nexport const makeLazyProps = propsFactory({\n  eager: Boolean,\n}, 'lazy')\n\nexport function useLazy (props: { eager: boolean }, active: Ref<boolean>) {\n  const isBooted = ref(false)\n  const hasContent = computed(() => isBooted.value || props.eager || active.value)\n\n  watch(active, () => isBooted.value = true)\n\n  function onAfterLeave () {\n    if (!props.eager) isBooted.value = false\n  }\n\n  return { isBooted, hasContent, onAfterLeave }\n}\n", "import type { ParsedAnchor } from '@/util'\nimport type { Box } from '@/util/box'\n\ntype Point = { x: number, y: number }\ndeclare class As<T extends string> {\n  private as: T\n}\ntype ElementPoint = Point & As<'element'>\ntype ViewportPoint = Point & As<'viewport'>\ntype Offset = Point & As<'offset'>\n\n/** Convert a point in local space to viewport space */\nexport function elementToViewport (point: ElementPoint, offset: Offset | Box) {\n  return {\n    x: point.x + offset.x,\n    y: point.y + offset.y,\n  } as ViewportPoint\n}\n\n/** Convert a point in viewport space to local space */\nexport function viewportToElement (point: ViewportPoint, offset: Offset | Box) {\n  return {\n    x: point.x - offset.x,\n    y: point.y - offset.y,\n  } as ElementPoint\n}\n\n/** Get the difference between two points */\nexport function getOffset<T extends Point> (a: T, b: T) {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y,\n  } as Offset\n}\n\n/** Convert an anchor object to a point in local space */\nexport function anchorToPoint (anchor: ParsedAnchor, box: Box): ViewportPoint {\n  if (anchor.side === 'top' || anchor.side === 'bottom') {\n    const { side, align } = anchor\n\n    const x: number =\n      align === 'left' ? 0\n      : align === 'center' ? box.width / 2\n      : align === 'right' ? box.width\n      : align\n    const y: number =\n      side === 'top' ? 0\n      : side === 'bottom' ? box.height\n      : side\n\n    return elementToViewport({ x, y } as ElementPoint, box)\n  } else if (anchor.side === 'left' || anchor.side === 'right') {\n    const { side, align } = anchor\n\n    const x: number =\n      side === 'left' ? 0\n      : side === 'right' ? box.width\n      : side\n    const y: number =\n      align === 'top' ? 0\n      : align === 'center' ? box.height / 2\n      : align === 'bottom' ? box.height\n      : align\n\n    return elementToViewport({ x, y } as ElementPoint, box)\n  }\n\n  return elementToViewport({\n    x: box.width / 2,\n    y: box.height / 2,\n  } as ElementPoint, box)\n}\n", "// Utilities\nimport { computed, effectScope, nextTick, onScopeDispose, ref, watch, watchEffect } from 'vue'\nimport {\n  clamp,\n  consoleError,\n  convertToUnit,\n  destructComputed,\n  flipAlign,\n  flipCorner,\n  flipSide,\n  getAxis,\n  getScrollParents,\n  IN_BROWSER,\n  isFixedPosition,\n  nullifyTransforms,\n  parseAnchor,\n  propsFactory,\n} from '@/util'\nimport { Box, getOverflow } from '@/util/box'\nimport { anchorToPoint, getOffset } from './util/point'\n\n// Types\nimport type { EffectScope, PropType, Ref } from 'vue'\nimport type { Anchor } from '@/util'\n\nexport interface LocationStrategyData {\n  contentEl: Ref<HTMLElement | undefined>\n  activatorEl: Ref<HTMLElement | undefined>\n  isActive: Ref<boolean>\n  isRtl: Ref<boolean>\n}\n\nconst locationStrategies = {\n  static: staticLocationStrategy, // specific viewport position, usually centered\n  connected: connectedLocationStrategy, // connected to a certain element\n}\n\nexport interface StrategyProps {\n  locationStrategy: keyof typeof locationStrategies | (\n    (\n      data: LocationStrategyData,\n      props: StrategyProps,\n      contentStyles: Ref<Record<string, string>>\n    ) => undefined | { updateLocation: (e: Event) => void }\n  )\n  location: Anchor\n  origin: Anchor | 'auto' | 'overlap'\n  offset?: number | string | number[]\n  maxHeight?: number | string\n  maxWidth?: number | string\n  minHeight?: number | string\n  minWidth?: number | string\n}\n\nexport const makeLocationStrategyProps = propsFactory({\n  locationStrategy: {\n    type: [String, Function] as PropType<StrategyProps['locationStrategy']>,\n    default: 'static',\n    validator: (val: any) => typeof val === 'function' || val in locationStrategies,\n  },\n  location: {\n    type: String as PropType<StrategyProps['location']>,\n    default: 'bottom',\n  },\n  origin: {\n    type: String as PropType<StrategyProps['origin']>,\n    default: 'auto',\n  },\n  offset: [Number, String, Array] as PropType<StrategyProps['offset']>,\n})\n\nexport function useLocationStrategies (\n  props: StrategyProps,\n  data: LocationStrategyData\n) {\n  const contentStyles = ref({})\n  const updateLocation = ref<(e: Event) => void>()\n\n  let scope: EffectScope | undefined\n  watchEffect(async () => {\n    scope?.stop()\n    updateLocation.value = undefined\n\n    if (!(IN_BROWSER && data.isActive.value && props.locationStrategy)) return\n\n    scope = effectScope()\n    await nextTick()\n    scope.run(() => {\n      if (typeof props.locationStrategy === 'function') {\n        updateLocation.value = props.locationStrategy(data, props, contentStyles)?.updateLocation\n      } else {\n        updateLocation.value = locationStrategies[props.locationStrategy](data, props, contentStyles)?.updateLocation\n      }\n    })\n  })\n\n  IN_BROWSER && window.addEventListener('resize', onResize, { passive: true })\n\n  onScopeDispose(() => {\n    IN_BROWSER && window.removeEventListener('resize', onResize)\n    updateLocation.value = undefined\n    scope?.stop()\n  })\n\n  function onResize (e: Event) {\n    updateLocation.value?.(e)\n  }\n\n  return {\n    contentStyles,\n    updateLocation,\n  }\n}\n\nfunction staticLocationStrategy () {\n  // TODO\n}\n\n/** Get size of element ignoring max-width/max-height */\nfunction getIntrinsicSize (el: HTMLElement) {\n  // const scrollables = new Map<Element, [number, number]>()\n  // el.querySelectorAll('*').forEach(el => {\n  //   const x = el.scrollLeft\n  //   const y = el.scrollTop\n  //   if (x || y) {\n  //     scrollables.set(el, [x, y])\n  //   }\n  // })\n\n  // const initialMaxWidth = el.style.maxWidth\n  // const initialMaxHeight = el.style.maxHeight\n  // el.style.removeProperty('max-width')\n  // el.style.removeProperty('max-height')\n\n  /* eslint-disable-next-line sonarjs/prefer-immediate-return */\n  const contentBox = nullifyTransforms(el)\n\n  contentBox.x -= parseFloat(el.style.left || 0)\n  contentBox.y -= parseFloat(el.style.top || 0)\n\n  // el.style.maxWidth = initialMaxWidth\n  // el.style.maxHeight = initialMaxHeight\n  // scrollables.forEach((position, el) => {\n  //   el.scrollTo(...position)\n  // })\n\n  return contentBox\n}\n\nfunction connectedLocationStrategy (data: LocationStrategyData, props: StrategyProps, contentStyles: Ref<Record<string, string>>) {\n  const activatorFixed = isFixedPosition(data.activatorEl.value)\n  if (activatorFixed) {\n    Object.assign(contentStyles.value, {\n      position: 'fixed',\n    })\n  }\n\n  const { preferredAnchor, preferredOrigin } = destructComputed(() => {\n    const parsedAnchor = parseAnchor(props.location, data.isRtl.value)\n    const parsedOrigin =\n      props.origin === 'overlap' ? parsedAnchor\n      : props.origin === 'auto' ? flipSide(parsedAnchor)\n      : parseAnchor(props.origin, data.isRtl.value)\n\n    // Some combinations of props may produce an invalid origin\n    if (parsedAnchor.side === parsedOrigin.side && parsedAnchor.align === flipAlign(parsedOrigin).align) {\n      return {\n        preferredAnchor: flipCorner(parsedAnchor),\n        preferredOrigin: flipCorner(parsedOrigin),\n      }\n    } else {\n      return {\n        preferredAnchor: parsedAnchor,\n        preferredOrigin: parsedOrigin,\n      }\n    }\n  })\n\n  const [minWidth, minHeight, maxWidth, maxHeight] =\n    (['minWidth', 'minHeight', 'maxWidth', 'maxHeight'] as const).map(key => {\n      return computed(() => {\n        const val = parseFloat(props[key]!)\n        return isNaN(val) ? Infinity : val\n      })\n    })\n\n  const offset = computed(() => {\n    if (Array.isArray(props.offset)) {\n      return props.offset\n    }\n    if (typeof props.offset === 'string') {\n      const offset = props.offset.split(' ').map(parseFloat)\n      if (offset.length < 2) offset.push(0)\n      return offset\n    }\n    return typeof props.offset === 'number' ? [props.offset, 0] : [0, 0]\n  })\n\n  let observe = false\n  if (IN_BROWSER) {\n    const observer = new ResizeObserver(() => {\n      if (observe) updateLocation()\n    })\n\n    watch([data.activatorEl, data.contentEl], ([newActivatorEl, newContentEl], [oldActivatorEl, oldContentEl]) => {\n      if (oldActivatorEl) observer.unobserve(oldActivatorEl)\n      if (newActivatorEl) observer.observe(newActivatorEl)\n\n      if (oldContentEl) observer.unobserve(oldContentEl)\n      if (newContentEl) observer.observe(newContentEl)\n    }, {\n      immediate: true,\n    })\n\n    onScopeDispose(() => {\n      observer.disconnect()\n    })\n  }\n\n  // eslint-disable-next-line max-statements\n  function updateLocation () {\n    observe = false\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => observe = true)\n    })\n\n    if (!data.activatorEl.value || !data.contentEl.value) return\n\n    const targetBox = data.activatorEl.value.getBoundingClientRect()\n    const contentBox = getIntrinsicSize(data.contentEl.value)\n    const scrollParents = getScrollParents(data.contentEl.value)\n    const viewportMargin = 12\n\n    if (!scrollParents.length) {\n      scrollParents.push(document.documentElement)\n      if (!(data.contentEl.value.style.top && data.contentEl.value.style.left)) {\n        contentBox.x += parseFloat(document.documentElement.style.getPropertyValue('--v-body-scroll-x') || 0)\n        contentBox.y += parseFloat(document.documentElement.style.getPropertyValue('--v-body-scroll-y') || 0)\n      }\n    }\n\n    const viewport = scrollParents.reduce<Box>((box: Box | undefined, el) => {\n      const rect = el.getBoundingClientRect()\n      const scrollBox = new Box({\n        x: el === document.documentElement ? 0 : rect.x,\n        y: el === document.documentElement ? 0 : rect.y,\n        width: el.clientWidth,\n        height: el.clientHeight,\n      })\n\n      if (box) {\n        return new Box({\n          x: Math.max(box.left, scrollBox.left),\n          y: Math.max(box.top, scrollBox.top),\n          width: Math.min(box.right, scrollBox.right) - Math.max(box.left, scrollBox.left),\n          height: Math.min(box.bottom, scrollBox.bottom) - Math.max(box.top, scrollBox.top),\n        })\n      }\n      return scrollBox\n    }, undefined!)\n    viewport.x += viewportMargin\n    viewport.y += viewportMargin\n    viewport.width -= viewportMargin * 2\n    viewport.height -= viewportMargin * 2\n\n    let placement = {\n      anchor: preferredAnchor.value,\n      origin: preferredOrigin.value,\n    }\n\n    function checkOverflow (_placement: typeof placement) {\n      const box = new Box(contentBox)\n      const targetPoint = anchorToPoint(_placement.anchor, targetBox)\n      const contentPoint = anchorToPoint(_placement.origin, box)\n\n      let { x, y } = getOffset(targetPoint, contentPoint)\n\n      switch (_placement.anchor.side) {\n        case 'top': y -= offset.value[0]; break\n        case 'bottom': y += offset.value[0]; break\n        case 'left': x -= offset.value[0]; break\n        case 'right': x += offset.value[0]; break\n      }\n\n      switch (_placement.anchor.align) {\n        case 'top': y -= offset.value[1]; break\n        case 'bottom': y += offset.value[1]; break\n        case 'left': x -= offset.value[1]; break\n        case 'right': x += offset.value[1]; break\n      }\n\n      box.x += x\n      box.y += y\n\n      box.width = Math.min(box.width, maxWidth.value)\n      box.height = Math.min(box.height, maxHeight.value)\n\n      const overflows = getOverflow(box, viewport)\n\n      return { overflows, x, y }\n    }\n\n    let x = 0; let y = 0\n    const available = { x: 0, y: 0 }\n    const flipped = { x: false, y: false }\n    let resets = -1\n    while (true) {\n      if (resets++ > 10) {\n        consoleError('Infinite loop detected in connectedLocationStrategy')\n        break\n      }\n\n      const { x: _x, y: _y, overflows } = checkOverflow(placement)\n\n      x += _x\n      y += _y\n\n      contentBox.x += _x\n      contentBox.y += _y\n\n      // flip\n      {\n        const axis = getAxis(placement.anchor)\n        const hasOverflowX = overflows.x.before || overflows.x.after\n        const hasOverflowY = overflows.y.before || overflows.y.after\n\n        let reset = false\n        ;['x', 'y'].forEach(key => {\n          if (\n            (key === 'x' && hasOverflowX && !flipped.x) ||\n            (key === 'y' && hasOverflowY && !flipped.y)\n          ) {\n            const newPlacement = { anchor: { ...placement.anchor }, origin: { ...placement.origin } }\n            const flip = key === 'x'\n              ? axis === 'y' ? flipAlign : flipSide\n              : axis === 'y' ? flipSide : flipAlign\n            newPlacement.anchor = flip(newPlacement.anchor)\n            newPlacement.origin = flip(newPlacement.origin)\n            const { overflows: newOverflows } = checkOverflow(newPlacement)\n            if (\n              (newOverflows[key].before <= overflows[key].before &&\n                newOverflows[key].after <= overflows[key].after) ||\n              (newOverflows[key].before + newOverflows[key].after <\n                (overflows[key].before + overflows[key].after) / 2)\n            ) {\n              placement = newPlacement\n              reset = flipped[key] = true\n            }\n          }\n        })\n        if (reset) continue\n      }\n\n      // shift\n      if (overflows.x.before) {\n        x += overflows.x.before\n        contentBox.x += overflows.x.before\n      }\n      if (overflows.x.after) {\n        x -= overflows.x.after\n        contentBox.x -= overflows.x.after\n      }\n      if (overflows.y.before) {\n        y += overflows.y.before\n        contentBox.y += overflows.y.before\n      }\n      if (overflows.y.after) {\n        y -= overflows.y.after\n        contentBox.y -= overflows.y.after\n      }\n\n      // size\n      {\n        const overflows = getOverflow(contentBox, viewport)\n        available.x = viewport.width - overflows.x.before - overflows.x.after\n        available.y = viewport.height - overflows.y.before - overflows.y.after\n\n        x += overflows.x.before\n        contentBox.x += overflows.x.before\n        y += overflows.y.before\n        contentBox.y += overflows.y.before\n      }\n\n      break\n    }\n\n    const axis = getAxis(placement.anchor)\n\n    Object.assign(contentStyles.value, {\n      '--v-overlay-anchor-origin': `${placement.anchor.side} ${placement.anchor.align}`,\n      transformOrigin: `${placement.origin.side} ${placement.origin.align}`,\n      // transform: `translate(${pixelRound(x)}px, ${pixelRound(y)}px)`,\n      top: convertToUnit(pixelRound(y)),\n      left: convertToUnit(pixelRound(x)),\n      minWidth: convertToUnit(axis === 'y' ? Math.min(minWidth.value, targetBox.width) : minWidth.value),\n      maxWidth: convertToUnit(pixelCeil(clamp(available.x, minWidth.value === Infinity ? 0 : minWidth.value, maxWidth.value))),\n      maxHeight: convertToUnit(pixelCeil(clamp(available.y, minHeight.value === Infinity ? 0 : minHeight.value, maxHeight.value))),\n    })\n  }\n\n  watch(\n    () => [\n      preferredAnchor.value,\n      preferredOrigin.value,\n      props.offset,\n      props.minWidth,\n      props.minHeight,\n      props.maxWidth,\n      props.maxHeight,\n    ],\n    () => updateLocation(),\n    { immediate: !activatorFixed }\n  )\n\n  if (activatorFixed) nextTick(() => updateLocation())\n  requestAnimationFrame(() => {\n    if (contentStyles.value.maxHeight) updateLocation()\n  })\n\n  return { updateLocation }\n}\n\nfunction pixelRound (val: number) {\n  return Math.round(val * devicePixelRatio) / devicePixelRatio\n}\n\nfunction pixelCeil (val: number) {\n  return Math.ceil(val * devicePixelRatio) / devicePixelRatio\n}\n", "let clean = true\nconst frames = [] as any[]\n\n/**\n * Schedule a task to run in an animation frame on its own\n * This is useful for heavy tasks that may cause jank if all ran together\n */\nexport function requestNewFrame (cb: () => void) {\n  if (!clean || frames.length) {\n    frames.push(cb)\n    run()\n  } else {\n    clean = false\n    cb()\n    run()\n  }\n}\n\nlet raf = -1\nfunction run () {\n  cancelAnimationFrame(raf)\n  raf = requestAnimationFrame(() => {\n    const frame = frames.shift()\n    if (frame) frame()\n\n    if (frames.length) run()\n    else clean = true\n  })\n}\n", "// Utilities\nimport { convertToUnit, getScrollParents, hasScrollbar, IN_BROWSER, propsFactory } from '@/util'\nimport { effectScope, nextTick, onScopeDispose, watchEffect } from 'vue'\nimport { requestNewFrame } from './requestNewFrame'\n\n// Types\nimport type { EffectScope, PropType, Ref } from 'vue'\n\nexport interface ScrollStrategyData {\n  root: Ref<HTMLElement | undefined>\n  contentEl: Ref<HTMLElement | undefined>\n  activatorEl: Ref<HTMLElement | undefined>\n  isActive: Ref<boolean>\n  updateLocation: Ref<((e: Event) => void) | undefined>\n}\n\nconst scrollStrategies = {\n  none: null,\n  close: closeScrollStrategy,\n  block: blockScrollStrategy,\n  reposition: repositionScrollStrategy,\n}\n\nexport interface StrategyProps {\n  scrollStrategy: keyof typeof scrollStrategies | ((data: ScrollStrategyData, props?: StrategyProps) => void)\n  contained: boolean | undefined\n}\n\nexport const makeScrollStrategyProps = propsFactory({\n  scrollStrategy: {\n    type: [String, Function] as PropType<StrategyProps['scrollStrategy']>,\n    default: 'block',\n    validator: (val: any) => typeof val === 'function' || val in scrollStrategies,\n  },\n})\n\nexport function useScrollStrategies (\n  props: StrategyProps,\n  data: ScrollStrategyData\n) {\n  if (!IN_BROWSER) return\n\n  let scope: EffectScope | undefined\n  watchEffect(async () => {\n    scope?.stop()\n\n    if (!(data.isActive.value && props.scrollStrategy)) return\n\n    scope = effectScope()\n    await nextTick()\n    scope.run(() => {\n      if (typeof props.scrollStrategy === 'function') {\n        props.scrollStrategy(data, props)\n      } else {\n        scrollStrategies[props.scrollStrategy]?.(data, props)\n      }\n    })\n  })\n}\n\nfunction closeScrollStrategy (data: ScrollStrategyData) {\n  function onScroll (e: Event) {\n    data.isActive.value = false\n  }\n\n  bindScroll(data.activatorEl.value ?? data.contentEl.value, onScroll)\n}\n\nfunction blockScrollStrategy (data: ScrollStrategyData, props: StrategyProps) {\n  const offsetParent = data.root.value?.offsetParent\n  const scrollElements = [...new Set([\n    ...getScrollParents(data.activatorEl.value, props.contained ? offsetParent : undefined),\n    ...getScrollParents(data.contentEl.value, props.contained ? offsetParent : undefined),\n  ])].filter(el => !el.classList.contains('v-overlay-scroll-blocked'))\n  const scrollbarWidth = window.innerWidth - document.documentElement.offsetWidth\n\n  const scrollableParent = (el => hasScrollbar(el) && el)(offsetParent || document.documentElement)\n  if (scrollableParent) {\n    data.root.value!.classList.add('v-overlay--scroll-blocked')\n  }\n\n  scrollElements.forEach((el, i) => {\n    el.style.setProperty('--v-body-scroll-x', convertToUnit(-el.scrollLeft))\n    el.style.setProperty('--v-body-scroll-y', convertToUnit(-el.scrollTop))\n    el.style.setProperty('--v-scrollbar-offset', convertToUnit(scrollbarWidth))\n    el.classList.add('v-overlay-scroll-blocked')\n  })\n\n  onScopeDispose(() => {\n    scrollElements.forEach((el, i) => {\n      const x = parseFloat(el.style.getPropertyValue('--v-body-scroll-x'))\n      const y = parseFloat(el.style.getPropertyValue('--v-body-scroll-y'))\n\n      el.style.removeProperty('--v-body-scroll-x')\n      el.style.removeProperty('--v-body-scroll-y')\n      el.style.removeProperty('--v-scrollbar-offset')\n      el.classList.remove('v-overlay-scroll-blocked')\n\n      el.scrollLeft = -x\n      el.scrollTop = -y\n    })\n    if (scrollableParent) {\n      data.root.value!.classList.remove('v-overlay--scroll-blocked')\n    }\n  })\n}\n\nfunction repositionScrollStrategy (data: ScrollStrategyData) {\n  let slow = false\n  let raf = -1\n\n  function update (e: Event) {\n    requestNewFrame(() => {\n      const start = performance.now()\n      data.updateLocation.value?.(e)\n      const time = performance.now() - start\n      slow = time / (1000 / 60) > 2\n    })\n  }\n\n  bindScroll(data.activatorEl.value ?? data.contentEl.value, e => {\n    if (slow) {\n      // If the position calculation is slow,\n      // defer updates until scrolling is finished.\n      // Browsers usually fire one scroll event per frame so\n      // we just wait until we've got two frames without an event\n      cancelAnimationFrame(raf)\n      raf = requestAnimationFrame(() => {\n        raf = requestAnimationFrame(() => {\n          update(e)\n        })\n      })\n    } else {\n      update(e)\n    }\n  })\n}\n\n/** @private */\nfunction bindScroll (el: HTMLElement | undefined, onScroll: (e: Event) => void) {\n  const scrollElements = [document, ...getScrollParents(el)]\n  scrollElements.forEach(el => {\n    el.addEventListener('scroll', onScroll, { passive: true })\n  })\n\n  onScopeDispose(() => {\n    scrollElements.forEach(el => {\n      el.removeEventListener('scroll', onScroll)\n    })\n  })\n}\n", "import { useToggleScope } from '@/composables/toggleScope'\n\nimport { computed, inject, onScopeDispose, provide, reactive, readonly, ref, watchEffect } from 'vue'\nimport { getCurrentInstance } from '@/util'\n\n// Types\nimport type { InjectionKey, Ref } from 'vue'\n\nconst StackSymbol: InjectionKey<StackProvide> = Symbol.for('vuetify:stack')\n\ninterface StackProvide {\n  activeChildren: Set<number>\n}\n\nconst globalStack = reactive<[uid: number, zIndex: number][]>([])\n\nexport function useStack (isActive: Readonly<Ref<boolean>>, zIndex: Readonly<Ref<string | number>>) {\n  const vm = getCurrentInstance('useStack')\n\n  const parent = inject(StackSymbol, undefined)\n  const stack: StackProvide = reactive({\n    activeChildren: new Set<number>(),\n  })\n  provide(StackSymbol, stack)\n\n  const _zIndex = ref(+zIndex.value)\n  useToggleScope(isActive, () => {\n    const lastZIndex = globalStack.at(-1)?.[1]\n    _zIndex.value = lastZIndex ? lastZIndex + 10 : +zIndex.value\n    globalStack.push([vm.uid, _zIndex.value])\n\n    parent?.activeChildren.add(vm.uid)\n\n    onScopeDispose(() => {\n      const idx = globalStack.findIndex(v => v[0] === vm.uid)\n      globalStack.splice(idx, 1)\n\n      parent?.activeChildren.delete(vm.uid)\n    })\n  })\n\n  const globalTop = ref(true)\n  watchEffect(() => {\n    const _isTop = globalStack.at(-1)?.[0] === vm.uid\n    setTimeout(() => globalTop.value = _isTop)\n  })\n\n  const localTop = computed(() => !stack.activeChildren.size)\n\n  return {\n    globalTop: readonly(globalTop),\n    localTop,\n    stackStyles: computed(() => ({ zIndex: _zIndex.value })),\n  }\n}\n", "// Utilities\nimport { computed, warn } from 'vue'\nimport { IN_BROWSER } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\n\nexport function useTeleport (target: Ref<boolean | string | Element>) {\n  const teleportTarget = computed(() => {\n    const _target = target.value\n\n    if (_target === true || !IN_BROWSER) return undefined\n\n    const targetElement =\n      _target === false ? document.body\n      : typeof _target === 'string' ? document.querySelector(_target)\n      : _target\n\n    if (targetElement == null) {\n      warn(`Unable to locate target ${_target}`)\n      return undefined\n    }\n\n    if (!useTeleport.cache.has(targetElement)) {\n      const el = document.createElement('div')\n      el.className = 'v-overlay-container'\n      targetElement.appendChild(el)\n      useTeleport.cache.set(targetElement, el)\n    }\n\n    return useTeleport.cache.get(targetElement)\n  })\n\n  return { teleportTarget }\n}\nuseTeleport.cache = new WeakMap<Element, Element>()\n", "import { attachedRoot } from '@/util'\nimport type { DirectiveBinding } from 'vue'\n\ninterface ClickOutsideBindingArgs {\n  handler: (e: MouseEvent) => void\n  closeConditional?: (e: Event) => boolean\n  include?: () => HTMLElement[]\n}\n\ninterface ClickOutsideDirectiveBinding extends DirectiveBinding {\n  value: ((e: MouseEvent) => void) | ClickOutsideBindingArgs\n}\n\nfunction defaultConditional () {\n  return true\n}\n\nfunction checkEvent (e: MouseEvent, el: HTMLElement, binding: ClickOutsideDirectiveBinding): boolean {\n  // The include element callbacks below can be expensive\n  // so we should avoid calling them when we're not active.\n  // Explicitly check for false to allow fallback compatibility\n  // with non-toggleable components\n  if (!e || checkIsActive(e, binding) === false) return false\n\n  // If we're clicking inside the shadowroot, then the app root doesn't get the same\n  // level of introspection as to _what_ we're clicking. We want to check to see if\n  // our target is the shadowroot parent container, and if it is, ignore.\n  const root = attachedRoot(el)\n  if (\n    typeof ShadowRoot !== 'undefined' &&\n    root instanceof ShadowRoot &&\n    root.host === e.target\n  ) return false\n\n  // Check if additional elements were passed to be included in check\n  // (click must be outside all included elements, if any)\n  const elements = ((typeof binding.value === 'object' && binding.value.include) || (() => []))()\n  // Add the root element for the component this directive was defined on\n  elements.push(el)\n\n  // Check if it's a click outside our elements, and then if our callback returns true.\n  // Non-toggleable components should take action in their callback and return falsy.\n  // Toggleable can return true if it wants to deactivate.\n  // Note that, because we're in the capture phase, this callback will occur before\n  // the bubbling click event on any outside elements.\n  return !elements.some(el => el?.contains(e.target as Node))\n}\n\nfunction checkIsActive (e: MouseEvent, binding: ClickOutsideDirectiveBinding): boolean | void {\n  const isActive = (typeof binding.value === 'object' && binding.value.closeConditional) || defaultConditional\n\n  return isActive(e)\n}\n\nfunction directive (e: MouseEvent, el: HTMLElement, binding: ClickOutsideDirectiveBinding) {\n  const handler = typeof binding.value === 'function' ? binding.value : binding.value.handler\n\n  el._clickOutside!.lastMousedownWasOutside && checkEvent(e, el, binding) && setTimeout(() => {\n    checkIsActive(e, binding) && handler && handler(e)\n  }, 0)\n}\n\nfunction handleShadow (el: HTMLElement, callback: Function): void {\n  const root = attachedRoot(el)\n\n  callback(document)\n\n  if (typeof ShadowRoot !== 'undefined' && root instanceof ShadowRoot) {\n    callback(root)\n  }\n}\n\nexport const ClickOutside = {\n  // [data-app] may not be found\n  // if using bind, inserted makes\n  // sure that the root element is\n  // available, iOS does not support\n  // clicks on body\n  mounted (el: HTMLElement, binding: ClickOutsideDirectiveBinding) {\n    const onClick = (e: Event) => directive(e as MouseEvent, el, binding)\n    const onMousedown = (e: Event) => {\n      el._clickOutside!.lastMousedownWasOutside = checkEvent(e as MouseEvent, el, binding)\n    }\n\n    handleShadow(el, (app: HTMLElement) => {\n      app.addEventListener('click', onClick, true)\n      app.addEventListener('mousedown', onMousedown, true)\n    })\n\n    if (!el._clickOutside) {\n      el._clickOutside = {\n        lastMousedownWasOutside: true,\n      }\n    }\n\n    el._clickOutside[binding.instance!.$.uid] = {\n      onClick,\n      onMousedown,\n    }\n  },\n\n  unmounted (el: HTMLElement, binding: ClickOutsideDirectiveBinding) {\n    if (!el._clickOutside) return\n\n    handleShadow(el, (app: HTMLElement) => {\n      if (!app || !el._clickOutside?.[binding.instance!.$.uid]) return\n\n      const { onClick, onMousedown } = el._clickOutside[binding.instance!.$.uid]!\n\n      app.removeEventListener('click', onClick, true)\n      app.removeEventListener('mousedown', onMousedown, true)\n    })\n\n    delete el._clickOutside[binding.instance!.$.uid]\n  },\n}\n\nexport default ClickOutside\n", "import { getCurrentInstance } from '@/util'\n\nexport function useScopeId () {\n  const vm = getCurrentInstance('useScopeId')\n\n  const scopeId = vm!.vnode.scopeId\n\n  return { scopeId: scopeId ? { [scopeId]: '' } : undefined }\n}\n"],
  "mappings": "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",
  "names": ["VSelectionControlGroupSymbol", "Symbol", "for", "VSelectionControlGroup", "defineComponent", "name", "props", "disabled", "Boolean", "id", "String", "inline", "falseIcon", "IconValue", "trueIcon", "multiple", "type", "default", "readonly", "modelValue", "emits", "val", "setup", "slots", "useProxiedModel", "uid", "getUid", "computed", "value", "provide", "toRef", "Array", "isArray", "useRender", "undefined", "makeSelectionControlProps", "propsFactory", "color", "String", "disabled", "Boolean", "error", "id", "inline", "label", "falseIcon", "IconValue", "trueIcon", "ripple", "type", "default", "multiple", "name", "readonly", "trueValue", "falseValue", "modelValue", "value", "valueComparator", "Function", "deepEqual", "makeThemeProps", "makeDensityProps", "useSelectionControl", "props", "group", "inject", "VSelectionControlGroupSymbol", "undefined", "densityClasses", "useDensity", "useProxiedModel", "computed", "isMultiple", "Array", "isArray", "model", "get", "val", "some", "v", "set", "currentValue", "newVal", "wrapInArray", "filter", "item", "textColorClasses", "textColorStyles", "useTextColor", "icon", "VSelectionControl", "genericComponent", "directives", "Ripple", "inheritAttrs", "emits", "setup", "attrs", "slots", "uid", "getUid", "isFocused", "ref", "isFocusVisible", "input", "onFocus", "e", "SUPPORTS_FOCUS_VISIBLE", "target", "matches", "onBlur", "onInput", "checked", "useRender", "for", "rootAttrs", "inputAttrs", "filterInputAttrs", "makeVCheckboxBtnProps", "propsFactory", "indeterminate", "Boolean", "indeterminateIcon", "type", "IconValue", "default", "makeSelectionControlProps", "falseIcon", "trueIcon", "VCheckboxBtn", "defineComponent", "name", "props", "emits", "value", "val", "setup", "slots", "emit", "useProxiedModel", "onChange", "v", "computed", "useRender", "undefined", "filterCheckboxBtnProps", "pick", "Object", "keys", "VCheckbox", "defineComponent", "name", "inheritAttrs", "props", "makeVInputProps", "makeVCheckboxBtnProps", "setup", "attrs", "slots", "uid", "getUid", "id", "computed", "useRender", "inputAttrs", "controlAttrs", "filterInputAttrs", "inputProps", "_1", "filterInputProps", "checkboxProps", "_2", "filterCheckboxBtnProps", "value", "default", "isDisabled", "isReadonly", "VChipGroupSymbol", "Symbol", "for", "VChipGroup", "defineComponent", "name", "props", "column", "Boolean", "filter", "valueComparator", "type", "Function", "default", "deepEqual", "makeGroupProps", "selectedClass", "makeTagProps", "makeThemeProps", "makeVariantProps", "variant", "emits", "value", "setup", "slots", "themeClasses", "provideTheme", "isSelected", "select", "next", "prev", "selected", "useGroup", "provideDefaults", "VChip", "color", "toRef", "useRender", "VChip", "defineComponent", "name", "directives", "Ripple", "props", "activeClass", "String", "appendAvatar", "appendIcon", "IconValue", "closable", "Boolean", "closeIcon", "type", "default", "closeLabel", "draggable", "filter", "filterIcon", "label", "link", "pill", "prependAvatar", "prependIcon", "ripple", "text", "modelValue", "makeBorderProps", "makeDensityProps", "makeElevationProps", "makeGroupItemProps", "makeRoundedProps", "makeRouterProps", "makeSizeProps", "makeTagProps", "tag", "makeThemeProps", "makeVariantProps", "variant", "emits", "e", "value", "val", "setup", "attrs", "emit", "slots", "borderClasses", "useBorder", "colorClasses", "colorStyles", "variantClasses", "useVariant", "densityClasses", "useDensity", "elevationClasses", "useElevation", "roundedClasses", "useRounded", "sizeClasses", "useSize", "themeClasses", "provideTheme", "isActive", "useProxiedModel", "group", "useGroupItem", "VChipGroupSymbol", "useLink", "onCloseClick", "Tag", "isLink", "hasAppend", "append", "hasClose", "close", "hasFilter", "hasPrepend", "prepend", "hasColor", "isSelected", "isClickable", "disabled", "onClickFunc", "toggle", "undefined", "selectedClass", "href", "genOverlays", "VIcon", "icon", "VAvatar", "image", "select", "size", "makeDelayProps", "propsFactory", "closeDelay", "Number", "String", "openDelay", "useDelay", "props", "cb", "delays", "runDelayFactory", "prop", "IN_BROWSER", "Promise", "resolve", "active", "window", "clearTimeout", "delay", "parseInt", "setTimeout", "runCloseDelay", "runOpenDelay", "VMenuSymbol", "Symbol", "for", "makeActivatorProps", "propsFactory", "activator", "String", "Object", "activatorProps", "type", "default", "openOnClick", "Boolean", "undefined", "openOnHover", "openOnFocus", "closeOnContentClick", "makeDelayProps", "useActivator", "props", "isActive", "isTop", "activatorEl", "ref", "isHovered", "isFocused", "firstEnter", "computed", "value", "runOpenDelay", "runCloseDelay", "useDelay", "availableEvents", "click", "e", "stopPropagation", "currentTarget", "target", "mouseenter", "mouseleave", "focus", "SUPPORTS_FOCUS_VISIBLE", "matches", "blur", "activatorEvents", "events", "contentEvents", "menu", "inject", "VMenuSymbol", "closeParents", "scrimEvents", "watch", "val", "activatorRef", "watchEffect", "nextTick", "isComponentInstance", "$el", "vm", "getCurrentInstance", "scope", "IN_BROWSER", "effectScope", "run", "_useActivator", "stop", "flush", "immediate", "oldVal", "getActivator", "unbindActivatorProps", "bindActivatorProps", "onScopeDispose", "el", "_props", "entries", "forEach", "name", "cb", "addEventListener", "keys", "k", "removeAttribute", "setAttribute", "removeEventListener", "selector", "proxy", "parentNode", "hasAttribute", "document", "querySelector", "nodeType", "Node", "ELEMENT_NODE", "makeLazyProps", "propsFactory", "eager", "Boolean", "useLazy", "props", "active", "isBooted", "ref", "hasContent", "computed", "value", "watch", "onAfterLeave", "elementToViewport", "point", "offset", "x", "y", "getOffset", "a", "b", "x", "y", "anchorToPoint", "anchor", "box", "side", "align", "width", "height", "elementToViewport", "locationStrategies", "static", "staticLocationStrategy", "connected", "connectedLocationStrategy", "makeLocationStrategyProps", "propsFactory", "locationStrategy", "type", "String", "Function", "default", "validator", "val", "location", "origin", "offset", "Number", "Array", "useLocationStrategies", "props", "data", "contentStyles", "ref", "updateLocation", "scope", "watchEffect", "stop", "value", "undefined", "IN_BROWSER", "isActive", "effectScope", "nextTick", "run", "window", "addEventListener", "onResize", "passive", "onScopeDispose", "removeEventListener", "e", "getIntrinsicSize", "el", "contentBox", "nullifyTransforms", "x", "parseFloat", "style", "left", "y", "top", "activatorFixed", "isFixedPosition", "activatorEl", "Object", "assign", "position", "preferredAnchor", "preferredOrigin", "destructComputed", "parsedAnchor", "parseAnchor", "isRtl", "parsedOrigin", "flipSide", "side", "align", "flipAlign", "flipCorner", "minWidth", "minHeight", "maxWidth", "maxHeight", "map", "key", "computed", "isNaN", "Infinity", "isArray", "split", "length", "push", "observe", "observer", "ResizeObserver", "watch", "contentEl", "newActivatorEl", "newContentEl", "oldActivatorEl", "oldContentEl", "unobserve", "immediate", "disconnect", "requestAnimationFrame", "targetBox", "getBoundingClientRect", "scrollParents", "getScrollParents", "viewportMargin", "document", "documentElement", "getPropertyValue", "viewport", "reduce", "box", "rect", "scrollBox", "Box", "width", "clientWidth", "height", "clientHeight", "Math", "max", "min", "right", "bottom", "placement", "anchor", "checkOverflow", "_placement", "targetPoint", "anchorToPoint", "contentPoint", "getOffset", "overflows", "getOverflow", "available", "flipped", "resets", "consoleError", "_x", "_y", "axis", "getAxis", "hasOverflowX", "before", "after", "hasOverflowY", "reset", "forEach", "newPlacement", "flip", "newOverflows", "transformOrigin", "convertToUnit", "pixelRound", "pixelCeil", "clamp", "round", "devicePixelRatio", "ceil", "clean", "frames", "requestNewFrame", "cb", "length", "push", "run", "raf", "cancelAnimationFrame", "requestAnimationFrame", "frame", "shift", "scrollStrategies", "none", "close", "closeScrollStrategy", "block", "blockScrollStrategy", "reposition", "repositionScrollStrategy", "makeScrollStrategyProps", "propsFactory", "scrollStrategy", "type", "String", "Function", "default", "validator", "val", "useScrollStrategies", "props", "data", "IN_BROWSER", "scope", "watchEffect", "stop", "isActive", "value", "effectScope", "nextTick", "run", "onScroll", "e", "bindScroll", "activatorEl", "contentEl", "offsetParent", "root", "scrollElements", "Set", "getScrollParents", "contained", "undefined", "filter", "el", "classList", "contains", "scrollbarWidth", "window", "innerWidth", "document", "documentElement", "offsetWidth", "scrollableParent", "hasScrollbar", "add", "forEach", "i", "style", "setProperty", "convertToUnit", "scrollLeft", "scrollTop", "onScopeDispose", "x", "parseFloat", "getPropertyValue", "y", "removeProperty", "remove", "slow", "raf", "update", "requestNewFrame", "start", "performance", "now", "updateLocation", "time", "cancelAnimationFrame", "requestAnimationFrame", "addEventListener", "passive", "removeEventListener", "StackSymbol", "Symbol", "for", "globalStack", "reactive", "useStack", "isActive", "zIndex", "vm", "getCurrentInstance", "parent", "inject", "undefined", "stack", "activeChildren", "Set", "provide", "_zIndex", "ref", "value", "useToggleScope", "lastZIndex", "at", "push", "uid", "add", "onScopeDispose", "idx", "findIndex", "v", "splice", "delete", "globalTop", "watchEffect", "_isTop", "setTimeout", "localTop", "computed", "size", "readonly", "stackStyles", "useTeleport", "target", "teleportTarget", "computed", "_target", "value", "IN_BROWSER", "undefined", "targetElement", "document", "body", "querySelector", "warn", "cache", "has", "el", "createElement", "className", "appendChild", "set", "get", "WeakMap", "defaultConditional", "checkEvent", "e", "el", "binding", "checkIsActive", "root", "attachedRoot", "ShadowRoot", "host", "target", "elements", "value", "include", "push", "some", "contains", "isActive", "closeConditional", "directive", "handler", "_clickOutside", "lastMousedownWasOutside", "setTimeout", "handleShadow", "callback", "document", "ClickOutside", "mounted", "onClick", "onMousedown", "app", "addEventListener", "instance", "$", "uid", "unmounted", "removeEventListener", "Scrim", "props", "modelValue", "color", "rest", "backgroundColorClasses", "value", "backgroundColorStyles", "VOverlay", "genericComponent", "name", "directives", "ClickOutside", "inheritAttrs", "absolute", "Boolean", "attach", "String", "Object", "closeOnBack", "type", "default", "contained", "contentClass", "contentProps", "disabled", "noClickAnimation", "persistent", "scrim", "zIndex", "Number", "makeActivatorProps", "makeDimensionProps", "makeLazyProps", "makeLocationStrategyProps", "makeScrollStrategyProps", "makeThemeProps", "makeTransitionProps", "emits", "e", "afterLeave", "setup", "slots", "attrs", "emit", "model", "useProxiedModel", "isActive", "computed", "get", "set", "v", "teleportTarget", "useTeleport", "themeClasses", "provideTheme", "rtlClasses", "isRtl", "useRtl", "hasContent", "onAfterLeave", "useLazy", "scrimColor", "useBackgroundColor", "globalTop", "localTop", "stackStyles", "useStack", "toRef", "activatorEl", "activatorRef", "activatorEvents", "contentEvents", "scrimEvents", "useActivator", "isTop", "dimensionStyles", "useDimension", "watch", "root", "ref", "contentEl", "contentStyles", "updateLocation", "useLocationStrategies", "useScrollStrategies", "onClickOutside", "animateClick", "closeConditional", "IN_BROWSER", "val", "window", "addEventListener", "onKeydown", "removeEventListener", "immediate", "key", "router", "useRouter", "useToggleScope", "useBackButton", "next", "top", "scrollParent", "getScrollParent", "document", "scrollingElement", "scrollTop", "animate", "transformOrigin", "transform", "duration", "easing", "standardEasing", "useRender", "activator", "mergeProps", "toHandlers", "activatorProps", "convertToUnit", "transition", "handler", "include", "useScopeId", "vm", "getCurrentInstance", "scopeId", "vnode", "undefined", "VMenu", "genericComponent", "name", "inheritAttrs", "props", "modelValue", "Boolean", "id", "String", "makeTransitionProps", "transition", "component", "VDialogTransition", "emits", "value", "setup", "attrs", "slots", "isActive", "useProxiedModel", "scopeId", "useScopeId", "uid", "getUid", "computed", "overlay", "ref", "parent", "inject", "VMenuSymbol", "openChildren", "provide", "register", "unregister", "closeParents", "setTimeout", "watch", "val", "onClickOutside", "useRender", "activator", "default", "forwardRefs", "makeSelectProps", "propsFactory", "chips", "Boolean", "closableChips", "eager", "hideNoData", "hideSelected", "menu", "menuIcon", "type", "IconValue", "default", "menuProps", "Object", "modelValue", "multiple", "noDataText", "String", "openOnClear", "readonly", "makeItemsProps", "itemChildren", "VSelect", "genericComponent", "name", "props", "makeTransitionProps", "transition", "component", "VDialogTransition", "emits", "val", "setup", "slots", "t", "useLocale", "vTextFieldRef", "ref", "useProxiedModel", "items", "transformIn", "transformOut", "useItems", "model", "v", "wrapInArray", "transformed", "selections", "computed", "value", "map", "find", "item", "selected", "selection", "onClear", "e", "onClickControl", "length", "onKeydown", "includes", "key", "select", "index", "findIndex", "splice", "useRender", "hasChips", "chip", "join", "externalValue", "preventDefault", "_a", "mergeProps", "onClick", "prepend", "isSelected", "undefined", "onChipClose", "stopPropagation", "slotProps", "VChip", "closable", "size", "text", "title", "forwardRefs"]
}
