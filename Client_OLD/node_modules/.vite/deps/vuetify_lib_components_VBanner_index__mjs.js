import {
  makePositionProps,
  usePosition
} from "./chunk-LDFXSKML.js";
import {
  makeLocationProps,
  useLocation
} from "./chunk-K6KGV2YA.js";
import {
  VAvatar
} from "./chunk-K5GCFFNW.js";
import "./chunk-MEYLD6X5.js";
import "./chunk-GYS7KXA4.js";
import "./chunk-763KZC3P.js";
import "./chunk-E67NOKRM.js";
import "./chunk-FHRMVSBZ.js";
import {
  makeDimensionProps,
  useDimension
} from "./chunk-QW2FPOSY.js";
import {
  VDefaultsProvider
} from "./chunk-FKDZHQFX.js";
import {
  makeBorderProps,
  useBorder
} from "./chunk-DR6AWHL6.js";
import {
  makeElevationProps,
  useElevation
} from "./chunk-ZIAZ4CTQ.js";
import {
  makeDensityProps,
  useDensity
} from "./chunk-45XFWYYM.js";
import "./chunk-FGEDOORO.js";
import {
  makeRoundedProps,
  useRounded
} from "./chunk-75DAJEU6.js";
import {
  useBackgroundColor
} from "./chunk-BGKQCIZB.js";
import {
  makeTagProps
} from "./chunk-QZUNYUBW.js";
import {
  makeDisplayProps,
  useDisplay
} from "./chunk-EENUDQFF.js";
import "./chunk-5HCNEKYN.js";
import {
  IconValue
} from "./chunk-A7NKUSSN.js";
import {
  makeThemeProps,
  provideTheme
} from "./chunk-IK4IAMHA.js";
import "./chunk-47WRWIHT.js";
import {
  createSimpleFunctional,
  genericComponent,
  makeComponentProps,
  propsFactory,
  provideDefaults,
  useRender
} from "./chunk-CTJ7QXWD.js";
import {
  createVNode,
  toRef
} from "./chunk-WRYTGV53.js";
import "./chunk-FAW2VN4A.js";

// node_modules/vuetify/lib/components/VBanner/VBanner.mjs
import "E:/Programming/Rozdel-a-Panuj/Client_OLD/node_modules/vuetify/lib/components/VBanner/VBanner.css";

// node_modules/vuetify/lib/components/VBanner/VBannerActions.mjs
var makeVBannerActionsProps = propsFactory({
  color: String,
  density: String,
  ...makeComponentProps()
}, "VBannerActions");
var VBannerActions = genericComponent()({
  name: "VBannerActions",
  props: makeVBannerActionsProps(),
  setup(props, _ref) {
    let {
      slots
    } = _ref;
    provideDefaults({
      VBtn: {
        color: props.color,
        density: props.density,
        slim: true,
        variant: "text"
      }
    });
    useRender(() => {
      var _a;
      return createVNode("div", {
        "class": ["v-banner-actions", props.class],
        "style": props.style
      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);
    });
    return {};
  }
});

// node_modules/vuetify/lib/components/VBanner/VBannerText.mjs
var VBannerText = createSimpleFunctional("v-banner-text");

// node_modules/vuetify/lib/components/VBanner/VBanner.mjs
var makeVBannerProps = propsFactory({
  avatar: String,
  bgColor: String,
  color: String,
  icon: IconValue,
  lines: String,
  stacked: Boolean,
  sticky: Boolean,
  text: String,
  ...makeBorderProps(),
  ...makeComponentProps(),
  ...makeDensityProps(),
  ...makeDimensionProps(),
  ...makeDisplayProps(),
  ...makeElevationProps(),
  ...makeLocationProps(),
  ...makePositionProps(),
  ...makeRoundedProps(),
  ...makeTagProps(),
  ...makeThemeProps()
}, "VBanner");
var VBanner = genericComponent()({
  name: "VBanner",
  props: makeVBannerProps(),
  setup(props, _ref) {
    let {
      slots
    } = _ref;
    const {
      backgroundColorClasses,
      backgroundColorStyles
    } = useBackgroundColor(props, "bgColor");
    const {
      borderClasses
    } = useBorder(props);
    const {
      densityClasses
    } = useDensity(props);
    const {
      displayClasses,
      mobile
    } = useDisplay(props);
    const {
      dimensionStyles
    } = useDimension(props);
    const {
      elevationClasses
    } = useElevation(props);
    const {
      locationStyles
    } = useLocation(props);
    const {
      positionClasses
    } = usePosition(props);
    const {
      roundedClasses
    } = useRounded(props);
    const {
      themeClasses
    } = provideTheme(props);
    const color = toRef(props, "color");
    const density = toRef(props, "density");
    provideDefaults({
      VBannerActions: {
        color,
        density
      }
    });
    useRender(() => {
      const hasText = !!(props.text || slots.text);
      const hasPrependMedia = !!(props.avatar || props.icon);
      const hasPrepend = !!(hasPrependMedia || slots.prepend);
      return createVNode(props.tag, {
        "class": ["v-banner", {
          "v-banner--stacked": props.stacked || mobile.value,
          "v-banner--sticky": props.sticky,
          [`v-banner--${props.lines}-line`]: !!props.lines
        }, themeClasses.value, backgroundColorClasses.value, borderClasses.value, densityClasses.value, displayClasses.value, elevationClasses.value, positionClasses.value, roundedClasses.value, props.class],
        "style": [backgroundColorStyles.value, dimensionStyles.value, locationStyles.value, props.style],
        "role": "banner"
      }, {
        default: () => {
          var _a;
          return [hasPrepend && createVNode("div", {
            "key": "prepend",
            "class": "v-banner__prepend"
          }, [!slots.prepend ? createVNode(VAvatar, {
            "key": "prepend-avatar",
            "color": color.value,
            "density": density.value,
            "icon": props.icon,
            "image": props.avatar
          }, null) : createVNode(VDefaultsProvider, {
            "key": "prepend-defaults",
            "disabled": !hasPrependMedia,
            "defaults": {
              VAvatar: {
                color: color.value,
                density: density.value,
                icon: props.icon,
                image: props.avatar
              }
            }
          }, slots.prepend)]), createVNode("div", {
            "class": "v-banner__content"
          }, [hasText && createVNode(VBannerText, {
            "key": "text"
          }, {
            default: () => {
              var _a2, _b;
              return [(_b = (_a2 = slots.text) == null ? void 0 : _a2.call(slots)) != null ? _b : props.text];
            }
          }), (_a = slots.default) == null ? void 0 : _a.call(slots)]), slots.actions && createVNode(VBannerActions, {
            "key": "actions"
          }, slots.actions)];
        }
      });
    });
  }
});
export {
  VBanner,
  VBannerActions,
  VBannerText
};
//# sourceMappingURL=vuetify_lib_components_VBanner_index__mjs.js.map
